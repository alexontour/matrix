version: '3.8'

services:

  traefik:
    image: "traefik:v2.10"
    restart: always
    command:
      - "--api.dashboard=true"  # Enables the Traefik Dashboard
      - "--api.insecure=false"  # Ensures the dashboard is not exposed on insecure HTTP
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letls.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letls.acme.storage=/certs/acme.json"
      - "--certificatesresolvers.letls.acme.httpchallenge.entrypoint=web"
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "traefik_certs:/certs"
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.v2200000000000000000.nicesrv.de`)"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.tls=true"
      - "traefik.http.routers.traefik-dashboard.tls.certresolver=letls"
    networks:
      - matrix_network
  nginx:
    image: "nginx:1.22.0"
    restart: always
    volumes:
      - nginx_conf:/etc/nginx/conf.d
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.rule=Host(`v2200000000000000000.nicesrv.de`)"
      - "traefik.http.routers.nginx.tls=true"
      - "traefik.http.routers.nginx.tls.certresolver=letls"
    networks:
      - matrix_network

  synapse:
    image: matrixdotorg/synapse:latest
    restart: unless-stopped
    environment:
      - SYNAPSE_CONFIG_PATH=/data/homeserver.yaml
    volumes:
      - synapse_data:/data
    depends_on:
      synapse_db:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.synapse.entrypoints=websecure"
      - "traefik.http.routers.synapse.rule=Host(`matrix.v2200000000000000000.nicesrv.de`)"
      - "traefik.http.routers.synapse.tls=true"
      - "traefik.http.routers.synapse.tls.certresolver=letls"
    networks:
      - matrix_network

  synapse_db:
    image: postgres:14-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - synapse_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U synapse"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - matrix_network

  synapse_admin:
    image: awesometechnologies/synapse-admin:latest
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.synapse-admin.entrypoints=websecure"
      - "traefik.http.routers.synapse-admin.rule=Host(`admin.v2200000000000000000.nicesrv.de`)"
      - "traefik.http.routers.synapse-admin.tls=true"
      - "traefik.http.routers.synapse-admin.tls.certresolver=letls"
    networks:
      - matrix_network

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - synapse_db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.v2200000000000000000.nicesrv.de`)"
      - "traefik.http.routers.pgadmin.tls=true"
      - "traefik.http.routers.pgadmin.tls.certresolver=letls"
    networks:
      - matrix_network

volumes:
  traefik_certs:
  nginx_conf:
  synapse_data:
  synapse_db_data:
  pgadmin_data:

networks:
  matrix_network:
